modelOLS
modelOLSout <- lm(formula = energy_demand ~ E_1 + E_25 + humidity + factor(day_night) +
temp + factor(season) + factor(time_band) + factor(weather_main) +
pressure + wind_speed, data = workBarcelona)
summary(modelOLSout)
modelOLS <- ols_step_forward_p(workModelFull, penter = 0.05, progress = TRUE)
cat("\n")
modelOLS
modelOLSout <- lm(formula = energy_demand ~ E_1 + E_25 + humidity
+ factor(day_night) + temp + factor(season) + factor(time_band)
+ factor(weather_main) + pressure + wind_speed, data = workBarcelona)
summary(modelOLSout)
modelOLS <- ols_step_forward_p(workModelFull, penter = 0.05, progress = TRUE)
cat("\n")
modelOLS
modelOLSout <- lm(formula = energy_demand ~ E_1 + E_25 + humidity
+ factor(day_night) + temp + factor(season) + factor(time_band)
+ factor(weather_main) + pressure + wind_speed, data = workBarcelona)
summary(modelOLSout)
ModelOLS <- ols_step_forward_p(workModelFull, penter = 0.05, progress = TRUE)
cat("\n")
ModelOLS
workModelOLS <- lm(formula = energy_demand ~ E_1 + E_25 + humidity
+ factor(day_night) + temp + factor(season) + factor(time_band)
+ factor(weather_main) + pressure + wind_speed, data = workBarcelona)
summary(workModelOLSout)
ModelOLS <- ols_step_forward_p(workModelFull, penter = 0.05, progress = TRUE)
cat("\n")
ModelOLS
workModelOLS <- lm(formula = energy_demand ~ E_1 + E_25 + humidity
+ factor(day_night) + temp + factor(season) + factor(time_band)
+ factor(weather_main) + pressure + wind_speed, data = workBarcelona)
summary(workModelOLS)
anova(workModelOLS, workModelPvalue)
names(summary(workModelPvalue))
summary(workModelPvalue)$adj.r.squared
?ols_step_all_possible
ModelOLS <- ols_step_all_possible(workModelFull, penter = 0.05, progress = TRUE)
cat("\n")
ModelOLS
workModelOLS <- lm(formula = energy_demand ~ E_1 + E_25 + humidity
+ factor(day_night) + temp + factor(season) + factor(time_band)
+ factor(weather_main) + pressure + wind_speed, data = workBarcelona)
summary(workModelOLS)
anova(workModelOLS, workModelPvalue)
ModelOLS <- ols_step_all_possible(workModelFull, penter = 0.05, progress = FALSE)
cat("\n")
ModelOLS
workModelOLS <- lm(formula = energy_demand ~ E_1 + E_25 + humidity
+ factor(day_night) + temp + factor(season) + factor(time_band)
+ factor(weather_main) + pressure + wind_speed, data = workBarcelona)
summary(workModelOLS)
anova(workModelOLS, workModelPvalue)
ModelOLS <- ols_step_all_possible(workModelFull, penter = 0.05, progress = FALSE)
cat("\n")
ModelOLS
#workModelOLS <- lm(formula = energy_demand ~ E_1 + E_25 + humidity
#    + factor(day_night) + temp + factor(season) + factor(time_band)
#    + factor(weather_main) + pressure + wind_speed, data = workBarcelona)
#summary(workModelOLS)
#anova(workModelOLS, workModelPvalue)
ModelOLS <- ols_step_all_possible(workModelFull, n=11)
cat("\n")
ModelOLS
#workModelOLS <- lm(formula = energy_demand ~ E_1 + E_25 + humidity
#    + factor(day_night) + temp + factor(season) + factor(time_band)
#    + factor(weather_main) + pressure + wind_speed, data = workBarcelona)
#summary(workModelOLS)
#anova(workModelOLS, workModelPvalue)
names(ols_step_all_possible(workModelFull, n=11))[]
plot(ModelOLS)
?plot
plot(x = ModelOLS$predictors, y =ModelOLS$adjr)
ModelOLS <- ols_step_all_possible(workModelFull, n=11)
ModelOLS <- ols_step_all_possible(workModelFull)
cat("\n")
plot(x = ModelOLS$n, y =ModelOLS$adjr)
#workModelOLS <- lm(formula = energy_demand ~ E_1 + E_25 + humidity
#    + factor(day_night) + temp + factor(season) + factor(time_band)
#    + factor(weather_main) + pressure + wind_speed, data = workBarcelona)
#summary(workModelOLS)
#anova(workModelOLS, workModelPvalue)
?which.max
which.max(ModelOLS$adjr)
View(ModelOLS)
which.max(ModelOLS$adjr) #2
which.max(ModelOLS$adjr) # 2
which.max(ModelOLS$adjr)[1,2046]
which.max(ModelOLS$adjr < 0.9155554)
which.max(ModelOLS$adjr < 0.9029650353)
which.max(ModelOLS$adjr < 0.9029650352)
?if
d
?ifelse
plot(x = ModelOLS$n, y =which.max(ModelOLS$adjr))
plot(x = ModelOLS$n, y = ModelOLS$adjr)
?for (variable in vector) {
}
for (ModelOLS$n in 1:11) {which.max(ModelOLS$adjr)
for (n in 1:11) {which.max(ModelOLS$adjr)
}
n
plot(x = ModelOLS$n, y = which.max(ModelOLS$adjr))
ModelOLS$n
?and
?logical
plot(x = ModelOLS$n, y = ModelOLS$adjr)
plot(x = ModelOLS$n, y = ModelOLS$adjr)
plot(x = ModelOLS$n, y = ModelOLS$sbic)
?ols_step_all_possible
plot(x = ModelOLS$n, y = ModelOLS$adjr)
plot(x = ModelOLS$n, y = ModelOLS$aic)
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
names(summary(workModelAIC))
names(summary(workModelAIC)$coefficients)
names(summary(workModelAIC)$coefficients)
names(summary(workModelAIC)$terms)
names(summary(workModelAIC)$terms[])
names(summary(workModelAIC)$terms)[]
summary(workModelAIC)
PvalueARS=AICARS
CrossvARS>BestfitsARS
PvalueARS>CrossvARS>
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
PvalueARS=AICARS
CrossvARS>BestfitsARS
PvalueARS>CrossvARS
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
PvalueARS==AICARS
CrossvARS>BestfitsARS
PvalueARS>CrossvARS
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
PvalueARS==AICARS
PvalueARS>CrossvARS
CrossvARS>BestfitsARS
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
PvalueARS == AICARS
PvalueARS > CrossvARS
CrossvARS > BestfitsARS
order(PvalueARS,BestfitsARS,AICARS,CrossvARS)
?lapply
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- lapply(ARSlist, sort)
PvalueARS == AICARS
PvalueARS > CrossvARS
CrossvARS > BestfitsARS
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- lapply(ARSlist, sort)
sorted_ARSlist
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- lapply(ARSlist, sort, use.names=TRUE)
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- slapply(ARSlist, sort, use.names=TRUE)
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- sapply(ARSlist, sort, use.names=TRUE)
?sapply(list, function)
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- sapply(ARSlist, sort, USE.NAMES=TRUE)
sorted_ARSlist
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- sapply(ARSlist, sort, USE.NAMES=FALSE)
sorted_ARSlist
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- lapply(ARSlist, sort, USE.NAMES=TRUE)
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- vapply(ARSlist, sort, USE.NAMES=TRUE)
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- sapply(ARSlist, sort, simplify = FALSE, USE.NAMES=TRUE)
sorted_ARSlist
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES=TRUE)
sorted_ARSlist
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist
PvalueARS <- summary(workModelPvalue)$adj.r.squared
BestfitsARS <- summary(workModelBestfit)$adj.r.squared
AICARS <- summary(workModelAIC)$adj.r.squared
CrossvARS <- summary(workModelCross)$adj.r.squared
ARSlist <- list(c(PvalueARS,BestfitsARS,AICARS,CrossvARS))
#sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist <- ARSlist[order(names(ARSlist))]
View(ARSlist)
PvalueARS = summary(workModelPvalue)$adj.r.squared
BestfitsARS = summary(workModelBestfit)$adj.r.squared
AICARS = summary(workModelAIC)$adj.r.squared
CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS,BestfitsARS,AICARS,CrossvARS)
#sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist <- ARSlist[order(names(ARSlist))]
View(ARSlist)
names(ARSlist)
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
ARSlist
#sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
ARSlist
#sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist <- ARSlist[order(names(ARSlist), decreasing=TRUE)]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
ARSlist
#sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist <- ARSlist[order(names(ARSlist), decreasing=TRUE)]
#sorted_ARSlist
View(ARSlist)
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
ARSlist
#sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist <- ARSlist[order(names(ARSlist), decreasing = TRUE)]
#sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
#sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist <- ARSlist[order(names(ARSlist), decreasing = TRUE)]
sorted_ARSlist
ARSlist[order(names(ARSlist), decreasing = TRUE)]
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
#sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist <- ARSlist[order(names(ARSlist), decreasing = FALSE)]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
#sorted_ARSlist <- sapply(ARSlist, sort, simplify = "array", USE.NAMES = TRUE)
sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- vapply(ARSlist, sort, USE.NAMES = TRUE)
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- vapply(ARSlist, sort)
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- lapply(ARSlist, sort)
#sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- lapply(ARSlist, sort, decreasing = TRUE)
#sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- lapply(ARSlist, sort, decreasing = TRUE, USE.NAMES = TRUE)
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- lapply(ARSlist, sort, USE.NAMES = TRUE)
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- sapply(ARSlist, sort, USE.NAMES = TRUE)
#sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- sapply(ARSlist, sort, decreasing = TRUE, USE.NAMES = TRUE)
#sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- sapply(ARSlist, sort, decreasing = FALSE, USE.NAMES = TRUE)
#sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
# Sort list of list
A <- list(1,"Java")
B <- list(5, "Python")
C <- list(6, "R")
D <- list(2, "PHP")
li <- list(A,B,C,D)
li
# Sort list of list
sorted_li <- li[order(sapply(li,'[[',1))]
sorted_li
View(ARSlist)
?fort
?sort
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
#ARSlist
sorted_ARSlist <- sort(ARSlist, decreasing = FALSE, USE.NAMES = TRUE)
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
ARSlist
#sorted_ARSlist <- sort(ARSlist, decreasing = FALSE, USE.NAMES = TRUE)
#sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared), decreasing = TRUE)
ARSlist
#sorted_ARSlist <- sort(ARSlist, decreasing = FALSE, USE.NAMES = TRUE)
#sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared), decreasing = FALSE)
ARSlist
#sorted_ARSlist <- sort(ARSlist, decreasing = FALSE, USE.NAMES = TRUE)
#sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
#PvalueARS = summary(workModelPvalue)$adj.r.squared
#BestfitsARS = summary(workModelBestfit)$adj.r.squared
#AICARS = summary(workModelAIC)$adj.r.squared
#CrossvARS = summary(workModelCross)$adj.r.squared
ARSlist <- list(PvalueARS = c(summary(workModelPvalue)$adj.r.squared),
BestfitsARS = c(summary(workModelBestfit)$adj.r.squared),
AICARS = c(summary(workModelAIC)$adj.r.squared),
CrossvARS = c(summary(workModelCross)$adj.r.squared))
ARSlist
#sorted_ARSlist <- sort(ARSlist, decreasing = FALSE, USE.NAMES = TRUE)
#sorted_ARSlist <- ARSlist[order(names(ARSlist))]
sorted_ARSlist
